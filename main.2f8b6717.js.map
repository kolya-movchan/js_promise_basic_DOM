{"version":3,"sources":["scripts/main.js"],"names":["promise1","Promise","resolve","reject","document","querySelector","addEventListener","promise2","setTimeout","Error","outcomeHandler","className","outcome","body","insertAdjacentHTML","thenAndCatch","promise","then","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAW,IAAIC,QAAQ,SAASC,EAASC,GAChCC,SAASC,cAAc,SAE/BC,iBAAiB,QAAS,WAAMJ,OAAAA,QAGjCK,EAAW,IAAIN,QAAQ,SAASC,EAASC,GAC7CK,WAAW,WAAML,OAAAA,EAAO,IAAIM,QAAU,OAGlCC,EAAiB,SAACC,EAAWC,GACjCR,SAASS,KAAKC,mBAAmB,YAChBH,eAAAA,OAAAA,EACCC,0BAAAA,OAAAA,EAFlB,mBAMIG,EAAe,SAACC,GACpBA,EACGC,KAAK,WACJP,EAAe,UAAW,cAE3BQ,MAAM,WACLR,EAAe,gBAAiB,eAItCK,EAAaf,GACbe,EAAaR","file":"main.2f8b6717.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst promise1 = new Promise(function(resolve, reject) {\n  const logo = document.querySelector('.logo');\n\n  logo.addEventListener('click', () => resolve());\n});\n\nconst promise2 = new Promise(function(resolve, reject) {\n  setTimeout(() => reject(new Error()), 3000);\n});\n\nconst outcomeHandler = (className, outcome) => {\n  document.body.insertAdjacentHTML('beforeend',\n    `<div class=\"${className}\">\n      Promise was ${outcome}!\n    </div>`);\n};\n\nconst thenAndCatch = (promise) => {\n  promise\n    .then(() => {\n      outcomeHandler('message', 'resolved');\n    })\n    .catch(() => {\n      outcomeHandler('error-message', 'rejected');\n    });\n};\n\nthenAndCatch(promise1);\nthenAndCatch(promise2);\n"]}